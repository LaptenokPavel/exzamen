{"version":3,"sources":["App.module.css","Button.tsx","Counter.tsx","CounterCheck.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Button","props","disabled","data","finishValue","className","s","button1","onClick","name","Counter","tablo","displayEnd","display","number","button","setData","startValue","CounterCheck","displayCheck","input","type","onChange","e","currentTarget","value","alert","App","useState","counter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,QAAU,qBAAqB,MAAQ,mBAAmB,aAAe,0BAA0B,MAAQ,mBAAmB,QAAU,qBAAqB,WAAa,wBAAwB,OAAS,oBAAoB,OAAS,oBAAoB,QAAU,uB,sICU3QC,EAAS,SAACC,GAEnB,OACI,8BACI,wBAAQC,SAAUD,EAAME,OAASF,EAAMG,YAC/BC,UAAWC,IAAEC,QACbC,QAASP,EAAMO,QAFvB,SAEiCP,EAAMQ,UCL5C,SAASC,EAAQT,GAKpB,OACI,sBAAKI,UAAWC,IAAEK,MAAlB,UACI,qBAAKN,UACDJ,EAAME,OAASF,EAAMG,YAAcE,IAAEM,WAAaN,IAAEO,QADxD,SAEI,qBAAKR,UAAWC,IAAEQ,OAAlB,SAA2Bb,EAAME,SAErC,sBAAKE,UAAWC,IAAES,OAAlB,UACI,cAAC,EAAD,CAAQP,QAVF,kBAAOP,EAAMe,QAAQf,EAAME,KAAO,IAWjCA,KAAMF,EAAME,KACZC,YAAaH,EAAMG,YACnBK,KAAM,QAEb,cAAC,EAAD,CAAQD,QAdA,kBAAOP,EAAMe,QAAQf,EAAMgB,aAe3Bd,KAAMF,EAAME,KACZc,WAAYhB,EAAMgB,WAClBR,KAAM,gBCpBvB,SAASS,EAAajB,GAMrB,OACI,sBAAKI,UAAWC,IAAEK,MAAlB,UACI,8BACI,sBAAKN,UAAWC,IAAEa,aAAlB,UACI,6CAGA,8BACI,uBAAOd,UAAWC,IAAEc,MACbC,KAAK,SACLC,SAfd,SAACC,GACEtB,EAAMe,QAAQO,EAAEC,cAAcC,OACnC,IAAfxB,EAAME,MACNuB,MAAM,WAayBD,MAAOxB,EAAME,SAIxB,+CAGA,8BACI,uBAAOE,UAAWC,IAAEc,MAAOC,KAAK,kBAM5C,qBAAKhB,UAAWC,IAAES,OAAlB,SACI,cAAC,EAAD,CAEIN,KAAM,aCdfkB,MA3Bf,WACI,IADW,EAIWC,mBAHL,GADN,mBAINzB,EAJM,KAIAa,EAJA,KAOX,OACI,sBAAKX,UAAWC,IAAEuB,QAAlB,UACI,8BAAK,cAACX,EAAD,CACDf,KAAMA,EACNa,QAASA,EACTC,WAXK,EAYLb,YAXM,MAcV,8BAAK,cAACM,EAAD,CACDP,KAAMA,EACNa,QAASA,EACTC,WAlBK,EAmBLb,YAlBM,UCOP0B,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.35d59009.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter\":\"App_counter__3WLZ3\",\"tablo\":\"App_tablo__iyOuP\",\"displayCheck\":\"App_displayCheck__2WXQ5\",\"input\":\"App_input__2rXix\",\"display\":\"App_display__TzgHV\",\"displayEnd\":\"App_displayEnd__aTJnQ\",\"number\":\"App_number__1SdgH\",\"button\":\"App_button__1LFv5\",\"button1\":\"App_button1__3kQyd\"};","import s from \"./App.module.css\";\r\nimport React from \"react\";\r\n\r\nexport type ButtonType = {\r\n    onClick?: () => void\r\n    onClickReset?: () => void\r\n    data?: number\r\n    startValue?: number\r\n    finishValue?: number\r\n    name?: string\r\n}\r\nexport const Button = (props: ButtonType) => {\r\n\r\n    return (\r\n        <div >\r\n            <button disabled={props.data === props.finishValue}\r\n                    className={s.button1}\r\n                    onClick={props.onClick}>{props.name}\r\n            </button>\r\n        </div>\r\n    )\r\n}","import s from \"./App.module.css\";\r\nimport React from \"react\";\r\nimport {Button} from \"./Button\";\r\n\r\nexport type CounterPropsType = {\r\n    data: number\r\n    setData: (data: number) => void\r\n    startValue: number\r\n    finishValue: number\r\n\r\n}\r\n\r\nexport function Counter(props: CounterPropsType) {\r\n\r\n    const incButton = () => (props.setData(props.data + 1))\r\n    const resetButton = () => (props.setData(props.startValue))\r\n\r\n    return (\r\n        <div className={s.tablo}>\r\n            <div className={\r\n                props.data === props.finishValue ? s.displayEnd : s.display}>\r\n                <div className={s.number}>{props.data}</div>\r\n            </div>\r\n            <div className={s.button}>\r\n                <Button onClick={incButton}\r\n                       data={props.data}\r\n                       finishValue={props.finishValue}\r\n                       name={'inc'}\r\n            />\r\n                <Button onClick={resetButton}\r\n                        data={props.data}\r\n                        startValue={props.startValue}\r\n                        name={'reset'}\r\n                />\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import s from \"./App.module.css\";\r\nimport React, {ChangeEvent} from \"react\";\r\nimport {Button} from \"./Button\";\r\n\r\nexport type CounterPropsType = {\r\n    data: number\r\n    setData: (data:number)=>void\r\n    startValue: number\r\n    finishValue: number\r\n\r\n}\r\n\r\nexport function CounterCheck(props:CounterPropsType) {\r\n    const changeUp = (e: any) => {\r\n            let value = props.setData(e.currentTarget.value);\r\nif (props.data === 0)\r\n    alert(\"jjjjjj\")\r\n    }\r\n        return (\r\n            <div className={s.tablo}>\r\n                <div>\r\n                    <div className={s.displayCheck}>\r\n                        <div>\r\n                            max value:\r\n                        </div>\r\n                        <div>\r\n                            <input className={s.input}\r\n                                   type=\"number\"\r\n                                   onChange={changeUp}\r\n                                   value={props.data}\r\n\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            start value:\r\n                        </div>\r\n                        <div>\r\n                            <input className={s.input} type=\"number\"\r\n                                   />\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className={s.button}>\r\n                    <Button\r\n\r\n                        name={'set'}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n}\r\n\r\n","import React, {useState} from 'react';\r\nimport s from'./App.module.css';\r\nimport {Counter} from \"./Counter\";\r\nimport {CounterCheck} from \"./CounterCheck\";\r\n\r\nfunction App() {\r\n    let startValue = 0;\r\n    let finishValue = 5;\r\n\r\n    let [data, setData] = useState<number>(startValue);\r\n\r\n\r\n    return (\r\n        <div className={s.counter}>\r\n            <div><CounterCheck\r\n                data={data}\r\n                setData={setData}\r\n                startValue={startValue}\r\n                finishValue={finishValue}\r\n            />\r\n            </div>\r\n            <div><Counter\r\n                data={data}\r\n                setData={setData}\r\n                startValue={startValue}\r\n                finishValue={finishValue}\r\n            /></div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}